>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> lazy_matrix_mul([[1, 2]], [[3], [4]])
[[11]]

>>> lazy_matrix_mul()
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> lazy_matrix_mul([[1, 2]])
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

>>> lazy_matrix_mul(1, [[2]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[1]], 2)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> lazy_matrix_mul([1, 2], [[1, 2]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1, '2']], [[3], [4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2]], [[3, 4, 5]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul([[1, 2]], [1, 2])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> lazy_matrix_mul([[1, 2]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> lazy_matrix_mul([[1, 2]], [["not", "numbers"]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> lazy_matrix_mul([[1, 2]], [[1, 2], [3]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size